
;***********************************************************************************************
; "MainController" for MSnS351WM
; 
; Rev 3: 4/16/12 - Add ASE counter options and configurable bank flow rate constants
;
; Rev 4: 8/02/12 - Modify source code to eliminate "asehi", "aselo", "trigerr", "dbcor", 
;                  and "warmoff".
; 
;***********************************************************************************************

[MegaTune]
   MTversion    = 2.25 ; MegaTune itself; needs to match exec version.

   queryCommand = "S"                                ; Request data format
   signature    = "MS1/Extra format 029y3 *********" ; Data format
   versionInfo  = "T"                                ; Request code version this file runs

;==============================================================================================
; Constants Definition
; --------------------
;
; Scalar Values
; -------------
; The scaling and translation values are used as follows:
;    msValue   = userValue / scale - translate
;    userValue = (msValue + translate) * scale
;    translate = userValue / scale - msValue
;    scale     = userValue / (msValue + translate)
;
; Array Values
; ------------
; Arrays are specified just like scalars, except that they have a "shape"
; entry in the fourth parameter.  The shape allows you to define lists or
; tables, for example [8] defines a list with eight values and [2x4] defines
; a table with eight values (two rows and four columns).  Tables may be
; stored in either "X-" or "Y-order."  X-order means that memory is layed
; out like.
;
;     [x1,y1] [x2,y1]...[xn,y1] [x1,y2]...
;
; Y-order would be
;
;     [x1,y1] [x1,y2]...[x1,yn] [x2,y1]...
;
; To use the TableEditor, you must define two lists and a table, and
; the lengths of the lists must correspond to the shape of the table.
;
; Bit Fields
; ----------
; Bits are numbered 0-7, the rightmost being bit zero.
;
; You need NOT supply the correct number of labels matching the
; number of bits you've specified (one bit requires 2 values, two
; bits requires 4 values and so on).  If you neglect to supply enough
; labels, they will be synthesized using the sequence "1", "2" and so
; on based upon their position in the sequence (the cltType and matType
; will end up with identical lists).
;===============================================================================================

[Constants]

   endianness      = big
   nPages          = 5
   burnCommand     = "B"
   pageSize        = 168,       168,       168,       168,       168
   pageActivate    = "P\001",   "P\002",   "P\003",   "P\004",   "P\005"
   pageReadCommand = "V",       "V",       "V",       "V",       "V"
   pageValueWrite  = "W%o%v",   "W%o%v",   "W%o%v",   "W%o%v",   "W%o%v"
   pageChunkWrite  = "X%o%c%v", "X%o%c%v", "X%o%c%v", "X%o%c%v", "X%o%c%v"


;***********************************************************************************************
; - First page of constants (page 1 in MS)
;***********************************************************************************************

page = 1

;  name     = array,  type, offset,   shape, units,   scale, translate,    lo,      hi, digits
   veBins1  = array,   U08,      0, [12x12],   "%",     1.0,       0.0,   0.0,   255.0,   0
   rpmBins1 = array,   U08,    144,    [12], "RPM",    20.0,       0.0,  20.0,  4500.0,   0
   mapBins1 = array,   U08,    156,    [12], "kPa",     1.0,       0.0,   0.0,   100.0,   0

;***********************************************************************************************
; - Second page of constants (page 2 in MS)
;***********************************************************************************************

page = 2
;  name       = array,  type, offset,   shape, units,   scale,  translate,    lo,     hi, digits

   stBins     = array,   U08,      0, [12x12], "Deg", -.35294,     -255.0,   0.0,    80.0,   0
   rpmBinsST  = array,   U08,    144,    [12], "RPM",    20.0,        0.0,  20.0,  4500.0,   0
   mapBinsST  = array,   U08,    156,    [12], "kPa",     1.0,        0.0,   0.0,   100.0,   0

;***********************************************************************************************
; - Third page of constants (page 3 in MS)(LC-1 default for MLV VE Analyze only)
;***********************************************************************************************

page = 3
;  name       = array,  type, offset,   shape, units,   scale,  translate,    lo,     hi, digits

   afrBins1   = array,   U08,      0, [12x12], "AFR",      0.1,        0.0,  10.0,    20.0,   1
   rpmBins6   = array,   U08,    144,    [12], "RPM",     20.0,        0.0,  20.0,  4500.0,   0
   mapBins6   = array,   U08,    156,    [12], "kPa",      1.0,        0.0,   0.0,   100.0,   0

;***********************************************************************************************
; - Forth page of constants (page 4 in MS)(LC-1 default for MLV VE Analyze only)
;***********************************************************************************************

page = 4
;  name       = array,  type, offset,   shape, units,   scale,  translate,    lo,     hi, digits

   afrBins2   = array,   U08,      0, [12x12], "AFR",      0.1,        0.0,  10.0,    20.0,   1
   rpmBins7   = array,   U08,    144,    [12], "RPM",     20.0,        0.0,  20.0,  4500.0,   0
   mapBins7   = array,   U08,    156,    [12], "kPa",      1.0,        0.0,   0.0,   100.0,   0

;***********************************************************************************************
; - Fifth page of constants (page 5 in MS)
;***********************************************************************************************

page = 5

;  name       = array,  type, offset, shape, units, scale, translate,    lo,      hi, digits
   wwuRnge    = array,   U08,      0, [ 10],  "°F",   1.0,     -40.0, -40.0,   215.0,   0
   wueBins    = array,   U08,     10, [ 10],   "%",   1.0,       0.0, 100.0,   255.0,   0

;  name       = scalar, type, offset,        units, scale, translate,    lo,      hi, digits
   tpsDOtRt0  = scalar,  U08,     20,           "",   1.0,       0.0,   0.0,   255.0,   0
   tpsDOtRt1  = scalar,  U08,     21,           "",   1.0,       0.0,   0.0,   255.0,   0
   tpsDOtRt2  = scalar,  U08,     22,           "",   1.0,       0.0,   0.0,   255.0,   0
   tpsDOtRt3  = scalar,  U08,     23,           "",   1.0,       0.0,   0.0,   255.0,   0
   tpsAQ0     = scalar,  U08,     24,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   tpsAQ1     = scalar,  U08,     25,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   tpsAQ2     = scalar,  U08,     26,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   tpsAQ3     = scalar,  U08,     27,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   CWU        = scalar,  U08,     28,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   CWH        = scalar,  U08,     29,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   asePct     = scalar,  U08,     30,          "%",   1.0,       0.0,   0.0,   255.0,   0
   aseCount   = scalar,  U08,     31,     "cycles",   1.0,       0.0,   0.0,   254.0,   0
   tpsACold   = scalar,  U08,     32,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   tpsThresh  = scalar,  U08,     33,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   tpsASync   = scalar,  U08,     34,       "0.1S",   1.0,       0.0,   0.0,   255.0,   0
   reqFuel    = scalar,  U08,     35,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   divider    = scalar,  U08,     36,           "",   1.0,       0.0,   0.0,   255.0,   0
   alternate  = scalar,  U08,     37,           "",   1.0,       0.0,   0.0,   255.0,   0
   injOpen    = scalar,  U08,     38,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   battFac    = scalar,  U08,     39,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   floodClear = scalar,  U08,     40,           "",   1.0,       0.0,   0.0,   255.0,   0
   acMult     = scalar,  U08,     41,          "%",   1.0,       0.0,   0.0,   255.0,   0
   pru        = scalar,  U08,     42,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   prh        = scalar,  U08,     43,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   pipAngle   = scalar,  U08,     44,         "°",    1.0,       0.0,   0.0,   255.0,   0
   ctCnt      = scalar,  U08,     45,       "ADC",    1.0,       0.0,   0.0,   255.0,   0
   wotCnt     = scalar,  U08,     46,       "ADC",    1.0,       0.0,   0.0,   255.0,   0
   asehi      = scalar,  U08,     47,   "DegF+40",    1.0,       0.0,   0.0,   255.0,   0
   aselo      = scalar,  U08,     48,   "DegF+40",    1.0,       0.0,   0.0,   255.0,   0
   tpsdq      = scalar,  U08,     49,          "%",   1.0,       0.0,   0.0,   255.0,   0
   trigErr    = scalar,  U08,     50,     "counts",   1.0,       0.0,   0.0,   255.0,   0
   dbCor      = scalar,  U08,     51,      "0.1mS",   1.0,       0.0,   0.0,   255.0,   0
   heton      = scalar,  U08,     52,    "DegF+40",   1.0,       0.0,   0.0,   255.0,   0
   hetoff     = scalar,  U08,     53,    "DegF+40",   1.0,       0.0,   0.0,   255.0,   0
   lopon      = scalar,  U08,     54,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   lopoff     = scalar,  U08,     55,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   hegton     = scalar,  U08,     56,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   hegtoff    = scalar,  U08,     57,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   lfpon      = scalar,  U08,     58,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   lfpoff     = scalar,  U08,     59,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   hfpon      = scalar,  U08,     60,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   hfpoff     = scalar,  U08,     61,        "ADC",   1.0,       0.0,   0.0,   255.0,   0
   revlon     = scalar,  U08,     62,      "RPM20",   1.0,       0.0,   0.0,   255.0,   0
   revloff    = scalar,  U08,     63,      "RPM20",   1.0,       0.0,   0.0,   255.0,   0
   runon      = scalar,  U08,     64,      "RPM20",   1.0,       0.0,   0.0,   255.0,   0
   startedon  = scalar,  U08,     65,      "RPM20",   1.0,       0.0,   0.0,   255.0,   0
   warmoff    = scalar,  U08,     66,    "DegF+40",   1.0,       0.0,   0.0,   255.0,   0
   bnkflowH   = scalar,  U08,     67,           "",   1.0,       0.0,   0.0,   255.0,   0
   bnkflowL   = scalar,  U08,     68,           "",   1.0,       0.0,   0.0,   255.0,   0
   asetype    = scalar,  U08,     69,           "",   1.0,       0.0,   0.0,   255.0,   0



;***********************************************************************************************
; NOTE! 
; MS AWEV = TS asePct
; MS AWC  = TS aseCount
;***********************************************************************************************

[Menu]

   ;----------------------------------------------------------------------------
   ;  There are five pre-defined values that may be used to define your menus.
   ;  The first four allow access to the "standard" dialog boxes, the last one
   ;  merely draws a separator (horizontal line) in the menu.
   ;
   ;     std_constants
   ;     std_enrichments
   ;     std_realtime
   ;     std_warmup
   ;
   ;     std_separator
   ;
   ;  If you use any of the std_constants, std_enrichments or std_warmup
   ;  editors, they may be optionally suffixed with a page number (only
   ;  useful for multi-page code variants), which causes them to edit the
   ;  specified page.  If you leave off the page specifier, they edit logical
   ;  page one as specified in the Constants section.
   ;
   ;----------------------------------------------------------------------------

menuDialog = main

   menu = "&Basic Settings"
      subMenu = tpsCalib,          "&TPS Calibration"
      subMenu = primSettings       "&Primer Settings"
      subMenu = fbSettings      "&Fuel Burn Settings"
      subMenu = alarmSettings        "&AlarmSettings"

   menu = "&Fuel Settings"
      subMenu = ecuConstants,    "&Fueling Constants"
      subMenu = ecuTpsSettings,  "&Accel Enrichments"
      subMenu = veTable1Tbl,       "Fuel &VE Table 1", 1
      subMenu = afrTable1Tbl,  "A&FR1 Targets for VE Table 1", 3
      subMenu = afrTable2Tbl,  "A&FR2 Targets for VE Table 1", 4

   menu = "Crank/&WarmUp"
      subMenu = ecuCCPW,              "&Cold Cranking"
      subMenu = ecuASE,                 "&After Start"
;*      subMenu = ecuWU,                      "&Warm Up"

   menu = "&Ignition Settings",
      subMenu = pipSet,           "&PIP Angle Setting"
;*      subMenu = triggerError, "&Trigger Error Setting"
      subMenu = sparkTbl,             "Spark Table &1", 2

   menu = "&Tuning"
      subMenu = std_realtime,      "&Realtime Display"
      subMenu = std_separator
      subMenu = std_warmup,           "&Warmup Wizard",
      subMenu = veTable1Map,             "VE Table &1"
      subMenu = sparkMap,              "Spar&k Table1"


;-----------------------------------------------------------------------------------------------

[UserDefined]

;  lineN  = label,                                         page number or offset-in-constants                                       

   dialog = tpsCalib,"Throttle Position Sensor Calibrator(for Megaview)",                5
   field  = "Closed Throttle TPS ADC counts",                                        ctCnt
   field  = "Wide Open Throttle TPS ADC counts",                                    wotCnt

   dialog = primSettings,"Primer Settings"                                               5
   field  = "Primer PW @ -40F",                                                        pru
   field  = "Primer PW @ +165F",                                                       prh

   dialog = fbSettings,"Fuel Burn Settings"                                              5
;*   field  = "Injector Deadband Correction is used by the fuel burn calculations"
;*   field  = "to compensate for the probablility that the actual injector deadband"
;*   field  = "is less than used by the fueling calculations, which tends to result"
;*   field  = "in a lower L/hr figure than actual, especially at shorter PWs"
;*   field  = "The entered figure is in 0.1ms resolution and is added to the (fd)"
;*   field  = "variable, which has the same effect as reducing the deadband by that"
;*   field  = "amount"
;*   field  = "Deadband correction adder (0.1ms resolution)",                          dbCor
   field  = "Injector bank flow rate starting values"
   field  = "300 CID = 306 (1:32)"
   field  = "351 CID = 479 (1:223)"
   field  = "460 CID = 605 (2:93)"
   field  = "Actual Litres / AIOT = AIOT Multiplier"
   field  = "AIOT Multiplier x 1,406,250 = bnkflowH:bnkflowL"
   field  = "Injector bank flow rate in L/hr x 10 Hi byte",                       bnkflowH
   field  = "Injector bank flow rate in L/hr x 10 Lo byte",                       bnkflowL


   dialog = alarmSettings,"Alarm Settings"                                               5
   field  = "High Engine Temperature Alarm on",                                      heton
   field  = "High Engine Temperature Alarm off",                                    hetoff
   field  = "Low Engine Oil Pressure Alarm on (0-255=0-100PSI)",                     lopon
   field  = "Low Engine Oil Pressure Alarm off (0-255=0-100PSI)",                   lopoff
   field  = "High Exhaust Gas Temperature Alarm on (0-255=32-1328F)",               hegton
   field  = "High Exhaust Gas Temperature Alarm off (0-255=32-1328F)",             hegtoff
   field  = "Low Fuel Pressure Alarm on (0-255=0-100PSI)",                           lfpon
   field  = "Low Fuel Pressure Alarm off (0-255=0-100PSI)",                         lfpoff
   field  = "High Fuel Pressure Alarm on (0-255=0-100PSI)",                          hfpon
   field  = "High Fuel Pressure Alarm off (0-255=0-100PSI)",                        hfpoff
   field  = "Rev Limiter on",                                                       revlon
   field  = "Rev Limiter off",                                                     revloff
 

   dialog = ecuConstants, "Fueling Constants",                                           5
   field  = "Req_Fuel = ((36,000,000*CID*.0000428)/(nCyl*14.7*flo))*(1/(nInj*mode))"
   field  = "Where:"
   field  = "Req_Fuel = Computed injector open time in 0.1mS"
   field  = "CID = Engine cubic inch displacement"
   field  = "nCyl = Number of cylinders"
   field  = "flo = Flow rate of individual injectors in lbs/hr"
   field  = "nInj = Number of injectors" 
   field  = "mode = injector firing mode(simultaneous = 1, alternating = 0.5)   
   field  = "Req_Fuel(set to 61)",                                                reqFuel
   field  = ""
   field  = "Possible combinations of Ignition counts per Injection
   field  = "and Injection Mode"
   field  = ""
   field  = "6 Cylinder"
   field  = "Ignition count = 1, mode = 0 or 1 (6 squirts)"
   field  = "Ignition count = 2, mode = 0      (3 squirts)"
   field  = "Ignition count = 3, mode = 0 or 1 (2 squirts)"
   field  = "Ignition count = 6, mode = 0      (1 squirt)"
   field  = ""
   field  = "8 Cylinder"
   field  = "Ignition count = 1, mode = 0 or 1 (8 squirts, reqfuel = 30 sim, 61 alt)"
   field  = "Ignition count = 2, mode = 0 or 1 (4 squirts, reqfuel = 61 sim, 121 alt)"
   field  = "Ignition count = 4, mode = 0 or 1 (2 squirts, reqfuel = 121 sim, 242 alt)"
   field  = "Ignition count = 8, mode = 0      (1 squirt, reqfuel = 242 sim)"
   field  = ""
   field  = "Ignition counts per Injection",                                       divider
   field  = "Injection Mode(0 = simultaneous,1 = alternate)",                    alternate 
   field  = "Injector opening time for Hi Z injectors is about 1.0 mS at 13.2V"
   field  = "1.0mS being typical"
   field  = "Injector Opening Time(set to 10)",                                    injOpen
   field  = ""
   field  = "Battery Correction Factor adjusts the Injector Opening Time up or down"
   field  = "when system voltage is other than the 13.2V standard, and usually ranges"
   field  = "between 0.1mS and 0.2mS at 6 volts either side of 13.2 volts,"
   field  = "0.1mS being typical"  
   field  = "Battery Correction Factor(set to 12)",                                battFac
   field  = "RPM set point engine run for ignition",                                 runon 
   field  = "RPM set point engine run for fuel",                                 startedon 

   dialog = ecuTpsSettings, "TPS Accel Enrichments",                                     5
   field  = "Accel Threshold(TPS-TPSLast compare)",                              tpsThresh
   field  = "Accel Period",                                                       tpsASync   
   field  = "Accel Amount @ -40°F",                                               tpsACold  
   field  = "Accel Cold Multiplier",                                                acMult
   field  = "Decel fuel cut percent(100 = no fuel cut)",                             tpsdq                         
   field  = "TPS Difference Over Time Bins in volts/sec"
   field  = "TPS ADC = volts/255"
   field  = "      TPS ADC Low Rate",                                            tpsDOtRt0
   field  = "  TPS ADC Mid Low Rate",                                            tpsDOtRt1
   field  = " TPS ADC Mid High Rate",                                            tpsDOtRt2
   field  = "     TPS ADC High Rate",                                            tpsDOtRt3
   field  = "Accel Enrichment Bins" 
   field  = "       At Low Rate V/S",                                               tpsAQ0    
   field  = "   At Mid Low Rate V/S",                                               tpsAQ1    
   field  = "  At Mid High Rate V/S",                                               tpsAQ2    
   field  = "      At High Rate V/S",                                               tpsAQ3

   dialog = ecuCCPW, "Cold Crank Pulse Widths",                                          5
   field  = "Crank PW @ -40°F",                                                        CWU
   field  = "Crank PW @ 165°F",                                                        CWH

   dialog = ecuASE, "After Start Enrichments",                                           5
   field  = "AfterStart Enrich initial",                                            asePct
   field  = "AfterStart Enrich Count",                                            aseCount
;*   field  = "ASE active above",                                                      asehi
;*   field  = "ASE active below",                                                      aselo
   field  = "The original B&G code limited the ASE counter to be incremented every"
   field  = "ignition event with a maximum of 255 counts. In cold weather this"
   field  = "limitation can make it necessary for one of more re-starts because of"
   field  = "short ASE time. This new code gives the option of a timed decay using"
   field  = "the original ignition event count, or a 100 ms, 250ms, 500ms, or"
   field  = "1 second counter. The object is to provide the correct time with as many"
   field  = "divisions as possible to have a smooth percentage adder decay over the"
   field  = "chosen time period"
   field  = "Values for variable asetype are"
   field  = "Ignition counter = 0"
   field  = "100ms counter = 1"
   field  = "250ms counter = 2"
   field  = "500ms counter = 3"
   field  = "1 second counter = 4"
   field  = "ASE counter type",                                                    asetype


;*   dialog = ecuWU, "Warmup Enrichment",                                                  5
;*   field  = "Warmup enrichment off at coolant temperature",                        warmoff

   dialog = pipSet,"PIP Angle Setting",                                                  5
   field  = "Profile Ignition Pickup Angle"
   field  = "8cyl = 90, 6cyl = 120",                                              pipAngle

;*   dialog = triggerError,"Trigger Error Setting",                                        5
;*   field  = "Crank trigger positioning error adjustment(trigErr)"
;*   field  = "PIP rising edge should occur at 10 degrees BTDC"
;*   field  = "If the Hall effect sensor triggers before, or after 10 degrees"
;*   field  = "the result of the ST table lookup can be increased or decreased"
;*   field  = "by the difference between the value of trigErr and decimal 128"
;*   field  = "One count = 0.353 degrees crankshaft"
;*   field  = "1 degree crankshaft = 2.833 counts"
;*   field  = "128 = no error, >128 = retard timing, <128 = advance timing",         trigErr



;-----------------------------------------------------------------------------------------------

[CurveEditor]

;----------------------------------------------------------------------------------------------

[TableEditor]

;***********************************************************************************************
;  table = table_id, map3d_id, "title", page
;  bins  = constant, variable
;***********************************************************************************************
;***********************************************************************************************
; - VE Table
;***********************************************************************************************

   table = veTable1Tbl, veTable1Map, "VE Table (%)", 1
   xBins       = rpmBins1, rpm
   yBins       = mapBins1, map
   zBins       = veBins1
   gridHeight  = 1.0
   upDownLabel = "(RICHER)", "(LEANER)"

;***********************************************************************************************
; - ST Table
;***********************************************************************************************

   table =   sparkTbl,   sparkMap, "ST Table (Degrees BTDC)", 2
   xBins = rpmBinsST, rpm
   yBins = mapBinsST, map
   zBins = stBins
   gridHeight  = 3.0
   upDownLabel = "ADVANCED", "RETARDED"

;***********************************************************************************************
; - AFR1 Table
;***********************************************************************************************

   table = afrTable1Tbl, afrTable1Map, "AFR1 Targets for VE Table 1 (AFR)", 3
   xBins = rpmBins6, rpm
   yBins = mapBins6, map
   zBins = afrBins1

;***********************************************************************************************
; - AFR2 Table
;***********************************************************************************************

   table = afrTable2Tbl, afrTable2Map, "AFR2 Targets for VE Table 1 (AFR)", 4
   xBins = rpmBins7, rpm
   yBins = mapBins7, map
   zBins = afrBins2

;-----------------------------------------------------------------------------------------------

[GaugeConfigurations]

;-----------------------------------------------------------------------------------------------
; Define a gauge's characteristics here, then go to a specific layout
; block (Tuning or FrontPage) and use the name you've defined here to
; display that gauge in a particular position.
;
; Name  = Case-sensitive, user-defined name for this gauge configuration.
; Var   = Case-sensitive name of variable to be displayed, see the
;         OutputChannels block in this file for possible values.
; Title = Title displayed at the top of the gauge.
; Units = Units displayed below value on gauge.
; Lo    = Lower scale limit of gauge.
; Hi    = Upper scale limit of gauge.
; LoD   = Lower limit at which danger color is used for gauge background.
; LoW   = Lower limit at which warning color is used.
; HiW   = Upper limit at which warning color is used.
; HiD   = Upper limit at which danger color is used.
; vd    = Decimal places in displayed value
; ld    = Label decimal places for display of Lo and Hi, above.
;-----------------------------------------------------------------------------------------------


;  Name            Var,                       Title,     Units, Lo,        Hi,  LoD,  LoW,       HiW,       HiD,vd,ld
   clockGge      = secl,             "Elapsed Time",     "sec",  0,       255,   -1,   -1,       999,       999, 0, 0
   mapADCGge     = mapADC,                "MAP ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   matADCGge     = matADC,                "MAT ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   cltADCGge     = cltADC,                "CLT ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   tpsADCGge     = tpsADC,                "TPS ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   batADCGge     = batADC,                "BAT ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   egoADCGge     = egoADC,                "EGO ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   ftrimADCGge   = ftrimADC,        "Fuel Trim ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   itrimADCGge   = itrimADC,    "Ignition Trim ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   opADCGge      = opADC,        "Oil Pressure ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   fpADCGge      = fpADC,       "Fuel Pressure ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   egtADCGge     = egtADC,   "Exhaust Gas Temp ADC",     "ADC",  0,       255,   -1,   -1,       999,       999, 0, 0
   baroGge       = barometer, "Barometric Pressure",     "kPa", 96,       107,   -1,   -1,       999,       999, 0, 0
   baroCorGge    = baroCorrection,"Baro Correction",      "%",  95,       105,   -1,   -1,       999,       999, 0, 0
   warmCorGge    = warmupEnrich,   "ECT Correction",      "%", 100,       200,   -1,   -1,       999,       999, 0, 0
   airCorGge     = airCorrection,  "ACT Correction",      "%",  75,       125,   -1,   -1,       999,       999, 0, 0
   ftCorGge      = fTrimCor,        "Fuel Trim Cor",      "%",  85,       115,   -1,   -1,       999,       999, 0, 0
   gammaEGge     = gammaEnrich, "Gamma Corrections",      "%",   0,       255,   -1,   -1,       999,       999, 0, 0
   accelenrGge   = accelEnrich,       "Accel Adder",     "mS",   0,       255,   -1,   -1,       999,       999, 0, 0
   rpm20Gge      = rpm20,            "Engine Speed", "RPMx20",   0,      5100,   -1,   -1,      4200,      4500, 0, 0
   vecurrGge     = veCurr,             "VE Current",      "%",   0,       255,   -1,   -1,       999,       999, 0, 0
   pwcalcHGge    = pwcalcH,               "pwcalcH",    "mmS",   0,       255,   -1,   -1,       999,       999, 0, 0
   pwcalcLGge    = pwcalcL,               "pwcalcL",    "mmS",   0,       255,   -1,   -1,       999,       999, 0, 0
   pulseWidthGge = pulseWidth,"Pulse Width Low Res",     "mS",   0,      25.5,   -1,   -1,       999,       999, 1, 1
   pwFDGge       = fd,    "PW Fuel Delivery Lo Res",     "mS",   0,      25.5,   -1,   -1,       999,       999, 1, 1
   fdSecHGge     = fdSecH,                 "fdSecH",    "mmS",   0,       255,   -1,   -1,       999,       999, 0, 0
   fdSecLGge     = fdSecL,                 "fdSecL",    "mmS",   0,       255,   -1,   -1,       999,       999, 0, 0
   tachHGge      = tachH,          "Tach period Hi",    "mmS",   0,       255,   -1,   -1,       999,       999, 0, 0
   tachLGge      = tachL,          "Tach period Lo",    "mmS",   0,       255,   -1,   -1,       999,       999, 0, 0
   safGge        = spkAngFac,  "Spark Angle Factor",     "---",  0,       255,   -1,   -1,       999,       999, 0, 0
   trfGge        = trmAngFac,   "Trim Angle Factor",     "---",  0,        58,   -1,   -1,       999,       999, 0, 0
   dafGge        = dlyAngFac,  "Delay Angle Factor",     "---",  0,       255,   -1,   -1,       999,       999, 0, 0
   monpHGge      = monpH,       "Ign Mon Period Hi",      "mS",  0,       255,   -1,   -1,       999,       999, 0, 0
   monpLGge      = monpL,       "Ign Mon Period Lo",      "mS",  0,       255,   -1,   -1,       999,       999, 0, 0
   engineGge     = engine,        "engine variable",     "---",  0,       255,   -1,   -1,       999,       999, 0, 0
   alarmbitsGge  = alarmbits,  "alarmbits variable",     "---",  0,       255,   -1,   -1,       999,       999, 0, 0
   portAbitsGge  = portAbits,  "portAbits variable",     "---",  0,       255,   -1,   -1,       999,       999, 0, 0
   portCbitsGge  = portCbits,  "portCbits variable",     "---",  0,       255,   -1,   -1,       999,       999, 0, 0
   bnkflowHmvGgeGge  = bnkflowHmv,  "Bank flow Hi byte", "---",  0,       255,   -1,   -1,       999,       999, 0, 0
   bnkflowLmvGgeGge  = bnkflowLmv,  "Bank flow Lo byte", "---",  0,       255,   -1,   -1,       999,       999, 0, 0

; Calculated Outputs

   tpspGge       = tpsp,        "Throttle Position",    "%TPS",  0,       100,   -1,   -1,       999,       999, 0, 0
   batVoltGge    = batteryVoltage,"Battery Voltage",   "Volts",  7,        20,    8,    9,        15,        16, 1, 1
   afrGge        = afr,            "Air/Fuel Ratio","Air/Fuel",  7,        23,   11, 11.5,        17,        18, 1, 1
   afr1Gge       = afr1,           "Air/Fuel Ratio","Air/Fuel",  7,        23,   11, 11.5,        17,        18, 1, 1
   mapGge        = map,                "Engine MAP",     "kPa",  0,       105,   -1,   -1,       999,       999, 0, 0
   dutyCycleGge  = dutyCycle,          "Duty Cycle",       "%",  0,       100,   -1,   -1,        85,        90, 1, 1
   timAngGge     = timAng,   "Desired Timing Angle",   "°BTDC",  0,        90,   -1,   -1,       999,       999, 0, 0
   trimAngGge    = trimAng,            "Trim Angle",       "°",  0,        20,   -1,   -1,       999,       999, 0, 0
   monTAGge      = monTimAng,    "Mon Timing Angle",   "°BTDC",  0,        90,   -1,   -1,       999,       999, 0, 0
   rpmHiResGge   = rpmHiRes,         "Engine Speed",     "RPM",  0,      5100,   -1,   -1,      4200,      4500, 0, 0
   pwHiResGge    = pwHiRes,    "Pulse Width Hi Res",      "mS",  0,    65.525,   -1,   -1,        66,        66, 3, 3
   ltrHrGge      = ltrHr,               "Fuel Burn",    "L/Hr",  0,       100,   -1,   -1,       999,       999, 2, 2
   oilPrsGge     = oilPrs,           "Oil Pressure",     "PSI",  0,       100,   15,   20,       999,       999, 0, 0
   fuelPrsGge    = fuelPrs,         "Fuel Pressure",     "PSI",  0,       100,   30,   32,        43,        45, 0, 0
   egTempGge     = egTemp,    "Exhaust Temperature",     "°F",   0,      1300,   -1,   -1,      1100,      1200, 0, 0


#if CELSIUS
   cltGauge      = coolant,          "Coolant Temp",      "°C", -40,      120,  -40,  -40,        93,       95, 0, 0
   matGge        = mat,           "Air Charge Temp",      "°C", -40,      110,  -40,  -40,        93,       95, 0, 0
#else
   cltGauge      = coolant,          "Coolant Temp",      "°F", -40,      250,  -40,  -40,       195,       200, 0, 0
   matGge        = mat,           "Air Charge Temp",      "°F", -40,      215,  -40,  -40,       195,       200, 0, 0
#endif

;------------------------------------------------------------------------------------------------

[FrontPage]

;************************************************************************************************
; NOTE Colours are not used by MT, but are required to be there
;************************************************************************************************

;            =                 expression,       Off-label,       On-label, Off bg, Off fg, On bg, On fg 
   indicator = { portAbits & 0b00000001 }, "Fuel Pump Off", "Fuel Pump On", white, black, red, black  
   indicator = { portAbits & 0b00000100 }, "Ign Trim Off", "Ign Trim On", white, black, red, black    
   indicator = { portAbits & 0b00100000 }, "Fuel Trim Off", "Fuel Trim On", white, black, red, black    
   indicator = { portCbits & 0b00000001 }, "Engine Normal", "ENGINE ALARM", white, black, red, black    
   indicator = { alarmbits & 0b00000001 }, "Oil Prs OK", "LOW OIL PRS", white, black, red, black    
   indicator = { alarmbits & 0b00000010 }, "Eng Temp OK", "HI ENG TEMP", white, black, red, black   
   indicator = { alarmbits & 0b00000100 }, "Lo FP OK", "LO FUEL PRS", white, black, red, black    
   indicator = { alarmbits & 0b00001000 }, "Hi FP OK", "HI FUEL PRS", white, black, red, black    
   indicator = { alarmbits & 0b00010000 }, "Exh Temp OK", "HI EXH TEMP", white, black, red, black    
   indicator = { alarmbits & 0b00100000 }, "Eng Revs OK", "REV LIMITER", white, black, red, black    
   indicator = { alarmbits & 0b01000000 }, "Not Flood Clear", "TPS FLOOD CLEAR", white, black, red, black  
   indicator = { alarmbits & 0b10000000 }, "No Engine Knock", "Engine Knocking", white, black, red, black
   indicator = { engine & 0b00000001 }, "Engine Off", "Engine On", white, black, red, black    
   indicator = { engine & 0b00000010 }, "Not Cranking", "Cranking", white, black, red, black    
   indicator = { engine & 0b00000100 }, "Not Afterstart Enr", "Afterstart Enr", white, black, red, black    
   indicator = { engine & 0b00001000 }, "Not Warmup Enr", "Warmup Enr", white, black, red, black    
   indicator = { engine & 0b00010000 }, "Not Accelerating", "Accelerating", white, black, red, black   
   indicator = { engine & 0b00100000 }, "Not Decelerating", "Decelerating", white, black, red, black   
   


;-----------------------------------------------------------------------------------------------

[Tuning]

;***********************************************************************************************
; Default guage set for VE and ST tuning
;***********************************************************************************************

   gauge1       = mapADCGge,
   gauge2       = matADCGge,
   gauge3       = cltADCGge,
   gauge4       = tpsADCGge,
   gauge5       = batADCGge,
   gauge6       = egoADCGge,

;===============================================================================================
; The number of bytes MegaTune, Megaview or Tuner Studio should expect as a result of sending 
; the "A", or "R" command to MegaSquirt is determined by the value of ochBlockSize, so be 
; very careful when you change it. "A" was the original B&G command, "R" comes from msnsextra
;===============================================================================================


[OutputChannels]

   ochBlockSize   = 41
   ochGetCommand  = "A"   ; Will accept "R" or "A"
 
;  name           = scalar, type, offset,       units,   scale, translation
   secl           = scalar,  U08,      0,       "sec",   1.000, 0.000
   mapADC         = scalar,  U08,      1,       "ADC",   1.000, 0.000
   matADC         = scalar,  U08,      2,       "ADC",   1.000, 0.000
   cltADC         = scalar,  U08,      3,       "ADC",   1.000, 0.000
   tpsADC         = scalar,  U08,      4,       "ADC",   1.000, 0.000
   batADC         = scalar,  U08,      5,       "ADC",   1.000, 0.000
   egoADC         = scalar,  U08,      6,       "ADC",   1.000, 0.000
   ftrimADC       = scalar,  U08,      7,       "ADC",   1.000, 0.000
   itrimADC       = scalar,  U08,      8,       "ADC",   1.000, 0.000
   opADC          = scalar,  U08,      9,       "ADC",   1.000, 0.000
   fpADC          = scalar,  U08,     10,       "ADC",   1.000, 0.000
   egtADC         = scalar,  U08,     11,       "ADC",   1.000, 0.000
   barometer      = scalar,  U08,     12,         "%",   1.000, 0.000
   baroCorrection = scalar,  U08,     13,         "%",   1.000, 0.000
   warmupEnrich   = scalar,  U08,     14,         "%",   1.000, 0.000
   airCorrection  = scalar,  U08,     15,         "%",   1.000, 0.000
   fTrimCor       = scalar,  U08,     16,         "%",   1.000, 0.000
   gammaEnrich    = scalar,  U08,     17,         "%",   1.000, 0.000
   accelEnrich    = scalar,  U08,     18,        "mS",   1.000, 0.000
   rpm20          = scalar,  U08,     19,       "RPM",      20, 0.000
   veCurr         = scalar,  U08,     20,         "%",   1.000, 0.000
   pwcalcH        = scalar,  U08,     21,       "mmS",   1.000, 0.000
   pwcalcL        = scalar,  U08,     22,       "mmS",   1.000, 0.000
   pulseWidth     = scalar,  U08,     23,        "mS",   0.100, 0.000
   fd             = scalar,  U08,     24,        "mS",   0.100, 0.000
   fdSecH         = scalar,  U08,     25,       "mmS",   1.000, 0.000
   fdSecL         = scalar,  U08,     26,       "mmS",   1.000, 0.000
   tachH          = scalar,  U08,     27,       "mmS",   1.000, 0.000
   tachL          = scalar,  U08,     28,       "mmS",   1.000, 0.000
   spkAngFac      = scalar,  U08,     29,          "",   1.000, 0.000 
   trmAngFac      = scalar,  U08,     30,          "",   1.000, 0.000 
   dlyAngFac      = scalar,  U08,     31,          "",   1.000, 0.000 
   monpH          = scalar,  U08,     32,     "0.1mS",   1.000, 0.000
   monpL          = scalar,  U08,     33,     "0.1mS",   1.000, 0.000
   tpsp           = scalar,  U08,     34,         "%",   1.000, 0.000
   engine         = scalar,  U08,     35,      "bits",   1.000, 0.000
   alarmbits      = scalar,  U08,     36,      "bits",   1.000, 0.000
   portAbits      = scalar,  U08,     37,      "bits",   1.000, 0.000
   portCbits      = scalar,  U08,     38,      "bits",   1.000, 0.000
   bnkflowHmv     = scalar,  U08,     39,       "---",   1.000, 0.000
   bnkflowLmv     = scalar,  U08,     40,       "---",   1.000, 0.000


; -------------------------------------- Computed outputs --------------------------------------


;***********************************************************************************************
; - Linear interpolation:
;
;   X1 Y1
;   X2 Y2
;   X3 Y3
;
;   Solve for Y2. X1,X2,X3,Y1,Y3 are known
;
;   Y2 = (((X2 - X1) * (Y3 - Y1)) / (X3 - X1)) + Y1
;
;***********************************************************************************************
;***********************************************************************************************
; - Oil Pressure and Fuel Pressure transducers 1-5V,  0-100 PSI linear
;   EGT amplifier 0.0027V @ 0C (32F), 5.022V @ 720C (1328F) Resolution ~5 degrees F 
;***********************************************************************************************


;*   afr1             = { (((egoADC - 0) * (22.39 - 7.35)) / (255 - 0)) + 7.35 } ; LC-1 AFR
   oilPrs             = { (((opADC - 51) * (100 - 0)) / (255 - 51)) + 0 } ; Oil Pressure
   fuelPrs            = { (((fpADC - 51) * (100 - 0)) / (255 - 51)) + 0 } ; Fuel Pressure
   egTemp             = { (((egtADC - 0) * (1328 - 32)) / (255 - 0)) + 32} ; Exh Gas Temp




   batteryVoltage   = { batADC / 255.0 * 30.0 }                        ; MS supply voltage
   coolant          = { tempCvt(table(cltADC, "thermfactor.inc")-40) } ; Coolant temperature 
   egoVoltage       = { egoADC / 255.0 * 5.0 }                         ; EGO sensor voltage
   mat              = { tempCvt(table(matADC, "matfactor.inc")-40) }   ; Manifold temperature 
   time             = { timeNow }                                      ; built-in function
;*   map              = { table(mapADC, "kpafactor4250.inc") }           ; Manifold pressure
   map              = { table(mapADC, "kpafactor4250rjh.inc") }        ; Manifold pressure
   cycleTime        = { 120000.0 / rpm20 }
   dutyCycle        = { 100.0 * pulseWidth / cycleTime }               ; 2 squirts alternating
   pwHiRes          = { ((pwcalcH * 256) + pwcalcL) / 1000 }
   rpm              = { rpm20 }
   egoCorrection    = { 100 } ; Ego correction not used, this is just to keep MLV happy
;*   iTimefull        = { (pippprdH * 256) + pippprdL }
   iTimefull        = { (tachH * 256) + tachL }
   rpmHiRes         = { 15000000 / iTimefull }                         ; 8 cyl
;*   rpmHiRes       = { 20000000 / iTimefull }                         ; 6 cyl


;***********************************************************************************************
; INNOVATE_LC1_DEFAULT
; 0.0v = 0.5 lambda = 7.35:1 AFR
; 5.0v = 1.523 lambda = 22.39:1 AFR
; afr  = 7.35 + (egoADC * 0.0589804)
;
;   afr              = { 7.35 + (egoADC * 0.0589804) }
;   lambda           = { afr / 14.7 }
;
; DIYWB_NON_LINEAR 
;   lambda           = { table(egoADC, "WBlambda100MOT.inc") / 100.0  }
;   afr              = { lambda * 14.7 }
;
;***********************************************************************************************
 
   afr              = { 7.35 + (egoADC * 0.0589804) }
   lambda           = { afr / 14.7 }

;***********************************************************************************************
;
; MSnS351WM Fuel Burn Logic
;
; The injector bank flow rates are approximate, and subject to fine tuning to make calculations
; as accurate as possible. As the calculations are done in Megaview as well asTuner Studio
; the 16 bit configurable constant bnklowH:bnkflowL is used. It is also saved on MS start up
; as bnkflowHmv:bnkflowLmv in RAM for Megaview use. The original fixed flow rate value
; calculations have been modified to use these new configurable constants.
;
; The 351 Windsor uses 19 lb/hr (199.7 cc/min) flow rate injectors @ 45psi fuel pressure.
;
; The injectors are fired in banks of 4 once every ignition event, or 4 times per crankshaft 
; revolution.
;
; The bank flow rate is 199.7 x 4 = 798.8 cc/min
; 798.8cc/min/60 = 13.3133 cc/sec
; 13.3133 cc/sec/10 = 1.3313 cc/0.1 sec
; 1.3313 cc/0.1 sec/ 10 = 0.13313 cc/0.01 sec
; 0.13313 cc/0.01 sec/ 10 = 0.013313 cc/0.001 sec (msec)
; 0.013313 cc/0.001 sec/ 10 = 0.0013313 cc/0.0001 sec (mmsec) 
; (resolution of injector pulse width)
;
; Maximum RPM is 5000 RPM x 4 = 20000 squirts per min/60 = 333.3 squirts per sec which has
; a period of 1/333.3 = .003 sec

; Maximum operating frequency of the Omron H7EC totalizer is 1000 hz which has a period of 
; 1/1000 = .001 sec.  A closed state pulse of .002 sec should satisfy the totalizer.
; Maximum prime pulse width is ~20 msec. Maximum anticipated operating pulse width is
;  ~12 msec. Operating pulse widths will be between 3 and 7 msec, so the counter can be  
; pulsed every injection event under high fuel use, but will normally be pulsed 4 or 5 
; injection events. If an 8 bit variable is used to total each injector bank pulse width, 
; less the deadband (fd variable) time rollover will occur at 25.6 msecs. At each roll 
; over the totalizer signal will close for 0.002 msec to increment the counter in 25.6 msec 
; steps, or 256 x .0013313 = .341 cc of fuel. This gives fuel burn to a theoretical 
; resolution of about 0.3 cc. Maximum amount of fuel that the H7EC totalizer can record before 
; roll over is 99999999 x .341 cc = 34,081,279.66 cc, or 3,4081.27966 L. The fuel tanks only 
; holds about 360 litres.
;
; The number displayed on the H7E represents the accumulated injector on time in 
; mmS/256. It is used to calculate the running total of fuel burned and is normally reset 
; after every tank fill. 
;
; The formula to do this is:
;
; L = AIOT reading x 256 x bank flow rate in L per mmsec
; Or:
; L = AIOT reading x 256 x 0.0013313 / 1000
; Or:
; L = AOIT reading x 0.000341     
;
; Each injector bank pulse width, less the deadband (fd variable) is also added to a 16 
; bit variable. After a running time of 1 second, this variable is copied to the 
; fdSecH:fdSecL variable which represents the accumulated injector on time over a 1 second 
; period. This can now be used to calculate the current fuel burn in litres per hour, 
; updated every second.
;
; The formula to do this is:
;
; L/Hr = Accumulated injector on time in mmSec x bank flow rate in L per mmsec  x 3600
; .0013313 cc/mmSec / 1000 = .0000013313L/mmSec
;
; ltrSec = { fdSecH*256+fdSecL*0.0000013313 }
; ltrHr  = { fdSecH*256+fdSecL*0.0000013313*3600 }
; ltrHr  = { fdSecH*256+fdSecL*0.00479268 }
; or
; ltrHr  = { ((fdSecH*256)+fdSecL)*(((bnkflowH*256)+bnkflowL)/100000) }
;
; REVISION!!
; WitchHunter Performance actual flow data:
; Bank CC/min = 828.5
; Average pressure across injectors (calculated from data logs) = 45 PSI
; Adjusted flow rate Bank CC/min = 842
; Bank CC/Sec = 14.0333
; Bank CC/mmsec = 0.00140333
; L/hr = Accumulated injector on time in mmSec x bank flow rate in L per mmsec x 3600
; 0.00140333cc/mmSec / 1000 = 0.00000140333L per mmSec
;  
; ltrSec = { fdSecH*256+fdSecL*0.00000140333 }
; ltrHr  = { fdSecH*256+fdSecL*0.00000140333*3600 }
; ltrHr  = { fdSecH*256+fdSecL*0.005051988 }
; or
; ltrHr  = { ((fdSecH*256)+fdSecL)*(((bnkflowH*256)+bnkflowL)/100000) }
;
; L = AIOT reading x 256 x bank flow rate in L per mmsec
; Or:
; L = AIOT reading x 256 x 0.0014033 / 1000
; Or:
; L = AOIT reading x 0.000359252
; or
; L = AIOT reading x ((((256 x bnkflowH:bnkflowL) / 3600)) / 100,000)
; or
; L = AIOT reading x 256 x bnkflowH:bnkflowL / 360,000,000)
;
;***********************************************************************************************

;*   ltrHr          = { fdSecH*256+fdSecL*0.00000140333*3600 }
   ltrHr  = { ((fdSecH*256)+fdSecL)*(((bnkflowH*256)+bnkflowL)/100000) }


;***********************************************************************************************
; Timing angle and ignition trim angle calculations:
;
; MSnS351WM calculates ignition angles scaled to 255. This is for two reasons. The foremost 
; being that it is, in the end, easier to calculate, using assembler and integer math. The 
; lesser reason is that results in finer resolution.
; So, the 8 cylinder engine has a PIP angle of 90° crank rotation. Scaled to to 255 this 
; results in 1° of crank rotation = 2.83 divisions of scale, or 1 division of scale = 0.353° 
; of crank rotation. Pretty good resolution!
;
; MSnS300 also calculates ignition angles in "next cylinder" mode, the same as the OEM Ford TFI 
; ignition strategy does. There are two benefits to this strategy. The foremost being that it 
; permits a "limp home" mode, because base timing is always set at 10° BTDC. Failing a 
; "SPOUT" (Spark Out) signal, the TFI module defaults to base timing. The lesser benefit is that 
; it allows more time for the processor to do the ignition timing calculations. 
;
; The ST table bin selected is named "Spk_Ang_FAc", for "Spark Angle Factor", being the 
; desired ignition angle BTDC, scaled to 255, that the spark is fired, for the NEXT CYLINDER,
; referenced to crank TDC on compression stroke, less the maximum "Trm_Ang_Fac"(20°scaled to 
; 255). The sum of the "Spark Angle Factor" and the "Trim Angle Factor" is the 
; "Delay Angle Factor". This is the total delay time from when the PIP signal is received to 
; when the spark is fired, for the NEXT CYLINDER. The desired timing angle is: 
; PIP angle - delay angle + Static timeing Angle (10°)
;
;  delayAng    = { dlyAngFac / 255 * 90.0  }
;  timAng      = { 90 - delayAng + 10  }
;
; "Trm_Ang_Fac", being "Trim Angle Factor", is the desired ignition trim angle scaled to 255.
; It is hard coded at 20 °(10° retard to 10° advance, Zero° is no trim). To do this with 
; unsigned numbers 0 would be 10° retard, 10 would be no trim, and 20  would be 10° advance. 
; Scaled to 255, 10° retard would be zero divisions. No trim would be 10*2.83= 28 divisions,
; and 10° of advance would be 20*2.83= 57 divisions. 
;
;   
;   trimAng     = { trmAngFac / 255 * 90.0 }
;
;***********************************************************************************************

   trimAng     = { ((((57 - trmAngFac) - 0) * (20 - 0)) / (57 - 0)) + 0 }
   delayAng    = { dlyAngFac / 255 * 90.0  }
   timAng      = { 90 - delayAng + 10  }

   
;***********************************************************************************************
; PTA4 is a keyboard interrupt pin which is triggered by the flyback voltage of the coil when 
; it is actually fired. When this happens, we grab a time stamp and subtract it from timetamp
; of the PIP signal to determine the ignition monitor delay period. This should be the same as 
; the delay period. With this information we can calculate the actual timing angle to make sure
; it is the same as the calculated timing angle.
;
; monDelayAngFac = ((monpH * 256 + monpL) * 255 / (pippprdH * 256 + pippprdL)
; monDelayAng    = monDelayAngFac * 90 / 255
; monFrngAng     = 90 - monDelayAng
; monTimAng      = monFrngAng + 10 
;
; monTimAng      = { 90-((((monpH*256+monpL)*255/(pippprdH*256+pippprdL))*90/255))+10
; 
;***********************************************************************************************

   monTimAng      = { 90-((((monpH*256+monpL)*255/(tachH*256+tachL))*90/255))+10

;***********************************************************************************************
; - Data Logging
;***********************************************************************************************
;===============================================================================================
; Default user-defined log emulates the full datalog.
;
; The entries are saved in the datalog file in the order in
; which they appear in the list below.
;
;   Channel - Case sensitive name of output channel to be logged.
;   Label   - String written to header line of log.  Be careful
;             about changing these, as programs like MSLVV and
;             MSTweak key off specific column names.
;   Type    - Data type of output, converted before writing.
;   Format  - C-style output format of data.
;===============================================================================================

[Datalog]

;          Channel              Label    Type    Format
   entry = secl,              "SecL",     int,     "%d"
   entry = mapADC,          "mapADC",     int,     "%d"
   entry = matADC,          "matADC",     int,     "%d"
   entry = cltADC,          "cltADC",     int,     "%d"
   entry = tpsADC,          "tpsADC",     int,     "%d"
   entry = batADC,          "batADC",     int,     "%d"
   entry = egoADC,          "egoADC",     int,     "%d"
   entry = ftrimADC,      "ftrimADC",     int,     "%d"
   entry = itrimADC,      "itrimADC",     int,     "%d"
   entry = opADC,            "opADC",     int,     "%d"
   entry = fpADC,            "fpADC",     int,     "%d"
   entry = egtADC,          "egtADC",     int,     "%d"
   entry = barometer,    "barometer",     int,     "%d"
   entry = baroCorrection,   "Gbaro",     int,     "%d"
   entry = warmupEnrich,     "Gwarm",     int,     "%d"
   entry = airCorrection,     "Gair",     int,     "%d"
   entry = fTrimCor,      "fTrimCor",   float,   "%.1f"
   entry = gammaEnrich,     "Gammae",     int,     "%d"
   entry = accelEnrich,     "TPSacc",     int,     "%d"
   entry = rpm20,              "RPM",     int,     "%d"
   entry = veCurr,             "Gve",     int,     "%d"
   entry = fd,                  "fd",     int,     "%d"
;*   entry = pwcalcH,        "pwcalcH",     int,     "%d"
;*   entry = pwcalcL,        "pwcalcL",     int,     "%d"
   entry = pulseWidth,          "PW",   float,   "%.1f"
;*   entry = fdSecH,          "fdSecH",     int,     "%d"
;*   entry = fdSecL,          "fdSecL",     int,     "%d"
;*   entry = tachH,            "tachH",     int,     "%d"
;*   entry = tachL,             "tach",     int,     "%d"
;*   entry = spkAngFac,    "spkAngFac",     int,     "%d"
;*   entry = trmAngFac,    "trmAngFac",     int,     "%d"
;*   entry = dlyAngFac,    "dlyAngFac",     int,     "%d"
;*   entry = monpH,            "monpH",     int,     "%d"
;*   entry = monpL,            "monpL",     int,     "%d"
   entry = tpsp,              "tpsp",   float,   "%.1f"
   entry = engine,          "Engine",     int,     "%d"
   entry = alarmbits,    "alarmbits",     int,     "%d"
   entry = portAbits,    "portAbits",     int,     "%d"
   entry = portCbits,    "portCbits",     int,     "%d"
   entry = oilPrs,          "oilPrs",   float,   "%.1f"
   entry = fuelPrs,        "fuelPrs",   float,   "%.1f"
   entry = egTemp,          "egTemp",   float,   "%.1f"
   entry = batteryVoltage,  "batt V",   float,   "%.1f"
   entry = coolant,            "CLT",   float,   "%.1f"
   entry = egoVoltage,          "O2",   float,   "%.3f"
   entry = mat,                "MAT",   float,   "%.1f"
   entry = time,              "Time",   float,   "%.3f"
   entry = map,                "MAP",     int,     "%d"
;*   entry = cycleTime,    "cycleTime",   float,   "%.3f"
   entry = dutyCycle,    "dutyCycle",   float,   "%.1f"
   entry = pwHiRes,        "pwHiRes",   float,   "%.1f"
   entry = egoCorrection,     "Gego",     int,     "%d"
;*   entry = iTimefull,     "iTimefull",  float,   "%.3f"
   entry = rpmHiRes,      "rpmHiRes",   float,   "%.3f"
   entry = afr,                "afr",   float,   "%.1f"
   entry = lambda,          "lambda",   float,   "%.1f"
   entry = ltrHr,            "ltrHr",   float,   "%.1f"
   entry = trimAng,        "trimAng",   float,   "%.1f"
;*   entry = delayAng,      "delayAng",   float,   "%.1f"
   entry = timAng,          "timAng",   float,   "%.1f"
   entry = monTimAng,    "monTimAng",   float,   "%.1f"
   entry = bnkflowHmv,  "bnkflowHmv",     int,     "%d"
   entry = bnkflowLmv,  "bnkflowLmv",     int,     "%d"



;-----------------------------------------------------------------------------------------------


